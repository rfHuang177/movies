[{"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\index.js":"1","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\App.js":"2","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\reportWebVitals.js":"3","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Card.js":"4","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\DetailPage.js":"5","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Home.js":"6","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Genres.js":"7","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Login.js":"8","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\LoginButton.js":"9","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\LikedPage.js":"10","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\constant.js":"11","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\LikeButton.js":"12"},{"size":566,"mtime":1612235057880,"results":"13","hashOfConfig":"14"},{"size":1548,"mtime":1612244305101,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612235057894,"results":"16","hashOfConfig":"14"},{"size":1779,"mtime":1612241933252,"results":"17","hashOfConfig":"14"},{"size":1434,"mtime":1612235057965,"results":"18","hashOfConfig":"14"},{"size":2682,"mtime":1612235057992,"results":"19","hashOfConfig":"14"},{"size":134,"mtime":1612235057979,"results":"20","hashOfConfig":"14"},{"size":2730,"mtime":1612236480409,"results":"21","hashOfConfig":"14"},{"size":712,"mtime":1612235058036,"results":"22","hashOfConfig":"14"},{"size":1242,"mtime":1612241321246,"results":"23","hashOfConfig":"14"},{"size":304,"mtime":1612235058052,"results":"24","hashOfConfig":"14"},{"size":1905,"mtime":1612244476185,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1ez6ceh",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\index.js",["58","59","60"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport DetailPage from \"./Components/DetailPage\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["61","62"],"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\App.js",["63"],"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\reportWebVitals.js",[],"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Card.js",["64","65","66","67"],"import React from \"react\";\nimport { AiTwotoneStar } from \"react-icons/ai\";\nimport { AiTwotoneHeart } from \"react-icons/ai\";\nimport { Link, Router } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  API_KEY as apiKey,\n  SESSION_ID as sessionId,\n  ACCOUNT_ID as accountId,\n} from \"./constant\";\nimport LikeButton from \"./LikeButton\";\n\nconst IMG_SRC_BASE = `https://image.tmdb.org/t/p/w500`;\n\nexport default function Card({ id, title, voteAverage, posterPath }) {\n  const imgSrc = `${IMG_SRC_BASE}/${posterPath}`;\n  const [movieId, setMovieId] = useState(\"\");\n\n  const getId = (event) => {\n    setMovieId(event.target.className);\n    console.log(\"movieId\", movieId);\n  };\n\n  const onLikeHandler = () => {\n    alert(`liked ${id}`);\n    fetch(\n      `https://api.themoviedb.org/3/account/${accountId}/favorite?api_key=${apiKey}&session_id=${sessionId}`,\n      {\n        method: \"post\",\n        headers: { \"content-type\": \"application/json;charset=utf-8\" },\n        body: JSON.stringify({\n          media_type: \"movie\",\n          media_id: id,\n          favorite: true,\n        }),\n      }\n    )\n      .then((res) => console.log(res.json()))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"movie\" id={id}>\n      <div className=\"movie-data\">\n        <img className=\"poster\" src={imgSrc} alt={title} />\n        <h4 className=\"movie-name\" onClick={getId}>\n          <Link to={`/detail/${id}`}>{title}</Link>\n        </h4>\n        <div className=\"movie-vote\">\n          <div className=\"vote\">\n            <AiTwotoneStar className=\"star-icon\"></AiTwotoneStar>\n            <span>{voteAverage}</span>\n          </div>\n          <div>\n            <LikeButton id={id} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\DetailPage.js",["68","69","70","71","72"],"import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from './Card';\nimport Genres from './Genres';\nimport './App.css';\nimport { BASE_URL, API_KEY, IMG_SRC_BASE } from './constant';\n\nfunction DetailPage() {\n  const [vote, setVote] = useState(0);\n  const [movie, setMovie] = useState('');\n\n  const params = useParams();\n  const movieId = params.id;\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/${movieId}?api_key=${API_KEY}&language=en-US`, {\n      method: 'get',\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        console.log(resp);\n        setMovie(resp);\n      });\n  }, []);\n\n  const imgSrc = `${IMG_SRC_BASE}/${movie.poster_path}`;\n\n  return (\n    <div>\n      <h3>{movie.original_title}</h3>\n      <div>\n        <img className=\"detail-poster\" src={imgSrc} alt=\"no image\" />\n      </div>\n      <div>\n        <h6>Release date:</h6>\n        <p>{movie.release_date}</p>\n      </div>\n      <div>\n        <h6>Overview:</h6>\n        <p>{movie.overview}</p>\n      </div>\n      <div>\n        <h6>Genres:</h6>\n        <p>\n          <Genres key={movie.id} genresArray={movie.genres} />\n        </p>\n      </div>\n      <div>\n        <h6>Average Rating:</h6>\n        <p>{movie.vote_average}</p>\n      </div>\n      <div>\n        <h6>Your Rating:</h6>\n      </div>\n      <div>\n        <h6>Production companies:</h6>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailPage;\n","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Home.js",["73","74"],"import './App.css';\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { BASE_URL, API_KEY } from './constant';\n\nfunction Home() {\n  const [page, setPage] = useState(1);\n  const [category, setCategory] = useState('popular');\n  const [movies, setMovies] = useState([]);\n\n  const url = `${BASE_URL}/${category}?api_key=${API_KEY}&page=${page}`;\n\n  useEffect(async () => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setMovies(res.results);\n      });\n  }, [page, category]);\n  //   login steps:\n  // 1. Use apiKey to get a request token from https://api.themoviedb.org/3/authentication/token/new . Get the \"requestToken\" from the response body\n  // 2. Use user's username & password and the \"requestToken\" to query the https://api.themoviedb.org/3/authentication/token/validate_with_login to validate the request\n  // 3. Use the requestToken again to query the https://api.themoviedb.org/3/authentication/session/new. Get the \"session_id\" from the respose body\n  // 4. Use the apiKey & session_id to query the https://api.themoviedb.org/3/account. Get the account details and store the account ID\n  // 5. Use session_id & apiKey for other API queries\n\n  return (\n    <>\n      <div className=\"page-content\">\n        <div className=\"style-selector\">\n          <select\n            className=\"select-style\"\n            onChange={(e) => {\n              setCategory(e.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"popular\">Popular</option>\n            <option value=\"now_playing\">Now playing</option>\n            <option value=\"top_rated\">Top rated</option>\n            <option value=\"upcoming\">Upcoming</option>\n          </select>\n        </div>\n        <div className=\"prev-next\">\n          <button\n            className=\"prev-button\"\n            onClick={() => {\n              page > 1 ? setPage(page - 1) : setPage(1);\n            }}\n          >\n            prev\n          </button>\n          <div className=\"page-count-container\">\n            <p>{page}/500</p>\n          </div>\n          <button\n            className=\"next-button\"\n            onClick={() => {\n              page < 500 ? setPage(page + 1) : setPage(500);\n            }}\n          >\n            next\n          </button>\n        </div>\n        <div className=\"movie-container\">\n          {movies.map((movie) => (\n            <Card\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              voteAverage={movie.vote_average}\n              posterPath={movie.poster_path}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Genres.js",[],"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\Login.js",["75","76","77","78","79","80","81"],"import { useCallback, useState, useEffect } from \"react\";\nimport { AiOutlineConsoleSql } from \"react-icons/ai\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction Login() {\n  const [session_id, setSessionId] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const onChangeUsername = useCallback((e) => {\n    setUsername(e.target.value);\n  }, []);\n\n  const onChangePassword = useCallback((e) => {\n    setPassword(e.target.value);\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const { request_token } = await fetch(\n      \"https://api.themoviedb.org/3/authentication/token/new?api_key=391415faa44f91d2b92477a8db1e4c22\"\n    ).then((res) => res.json());\n\n    await fetch(\n      \"https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=391415faa44f91d2b92477a8db1e4c22\",\n      {\n        method: \"post\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          username,\n          password,\n          request_token,\n        }),\n      }\n    ).then((res) => res.json());\n\n    const { session_id } = await fetch(\n      \"https://api.themoviedb.org/3/authentication/session/new?api_key=391415faa44f91d2b92477a8db1e4c22\",\n      {\n        method: \"post\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({ request_token }),\n      }\n    ).then((res) => res.json());\n\n    const account = await fetch(\n      `https://api.themoviedb.org/3/account?api_key=391415faa44f91d2b92477a8db1e4c22&session_id=${session_id}`,\n      {\n        method: \"get\",\n        headers: { \"content-type\": \"application/json\" },\n      }\n    ).then((res) => res.json());\n    localStorage.setItem(\"session_id\", session_id);\n    localStorage.setItem(\"username\", JSON.stringify(account.username));\n    localStorage.setItem(\"userid\", JSON.stringify(account.id));\n\n    console.log(session_id);\n    console.log(account);\n    console.log(account.id);\n    if (account.username === username) {\n      alert(\"logged in\");\n      history.push(\"/\");\n      window.location.reload();\n    } else {\n      alert(\"failed to log in\");\n      console.log(\"didn't log in\");\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <label>\n          username:\n          <input type=\"text\" value={username} onChange={onChangeUsername} />\n        </label>\n        <label>\n          password:\n          <input type=\"password\" value={password} onChange={onChangePassword} />\n        </label>\n        <input type=\"submit\" onClick={onSubmit} />\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\LoginButton.js",["82","83","84","85","86"],"import React from \"react\";\nimport { AiTwotoneStar } from \"react-icons/ai\";\nimport { AiTwotoneHeart } from \"react-icons/ai\";\nimport { Link, Router } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nexport default function LoginButton() {\n  const logOut = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"session_id\");\n    window.location.reload();\n  };\n  const userName = localStorage.getItem(\"username\");\n  if (userName) {\n    return (\n      <div className=\"logout\" onClick={logOut}>\n        <Link to=\"/\">Log out</Link>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"login\">\n        <Link to=\"/log-in\">Log in</Link>\n      </div>\n    );\n  }\n}\n","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\LikedPage.js",["87","88"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport {\n  API_KEY as apiKey,\n  SESSION_ID as sessionId,\n  ACCOUNT_ID as accountId,\n} from \"./constant\";\n\nexport default function LikedPage() {\n  const [movies, setMovies] = useState([]);\n  const userName = localStorage.getItem(\"username\");\n  const account = localStorage.getItem(\"account\");\n\n  useEffect(async () => {\n    fetch(\n      `https://api.themoviedb.org/3/account/${accountId}/favorite/movies?api_key=${apiKey}&session_id=${sessionId}`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        setMovies(res.results);\n      });\n  }, []);\n\n  // console.log(movies);\n  // console.log(userName);\n  // console.log(account.username);\n\n  if (userName) {\n    return (\n      <div>\n        <h2>Favorite movies</h2>\n        <div className=\"movie-container\">\n          {movies.map((movie) => (\n            <Card\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              voteAverage={movie.vote_average}\n              posterPath={movie.poster_path}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Please Log In</h1>\n      </div>\n    );\n  }\n}\n","C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\constant.js",[],"C:\\Users\\30751\\OneDrive\\桌面\\movies\\src\\Components\\LikeButton.js",["89","90","91","92","93","94"],{"ruleId":"95","severity":1,"message":"96","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"99","line":7,"column":27,"nodeType":"97","messageId":"98","endLine":7,"endColumn":33},{"ruleId":"95","severity":1,"message":"100","line":7,"column":35,"nodeType":"97","messageId":"98","endLine":7,"endColumn":40},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"95","severity":1,"message":"105","line":3,"column":35,"nodeType":"97","messageId":"98","endLine":3,"endColumn":41},{"ruleId":"95","severity":1,"message":"106","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":24},{"ruleId":"95","severity":1,"message":"99","line":4,"column":16,"nodeType":"97","messageId":"98","endLine":4,"endColumn":22},{"ruleId":"95","severity":1,"message":"107","line":5,"column":20,"nodeType":"97","messageId":"98","endLine":5,"endColumn":29},{"ruleId":"95","severity":1,"message":"108","line":24,"column":9,"nodeType":"97","messageId":"98","endLine":24,"endColumn":22},{"ruleId":"95","severity":1,"message":"109","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"110","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":14},{"ruleId":"95","severity":1,"message":"111","line":9,"column":16,"nodeType":"97","messageId":"98","endLine":9,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":24,"column":6,"nodeType":"114","endLine":24,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":32,"column":9,"nodeType":"118","endLine":32,"endColumn":70},{"ruleId":"112","severity":1,"message":"119","line":13,"column":13,"nodeType":"120","endLine":19,"endColumn":4},{"ruleId":"112","severity":1,"message":"121","line":19,"column":6,"nodeType":"114","endLine":19,"endColumn":22,"suggestions":"122"},{"ruleId":"95","severity":1,"message":"107","line":1,"column":33,"nodeType":"97","messageId":"98","endLine":1,"endColumn":42},{"ruleId":"95","severity":1,"message":"123","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":29},{"ruleId":"95","severity":1,"message":"124","line":3,"column":22,"nodeType":"97","messageId":"98","endLine":3,"endColumn":31},{"ruleId":"95","severity":1,"message":"125","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":20},{"ruleId":"95","severity":1,"message":"126","line":7,"column":22,"nodeType":"97","messageId":"98","endLine":7,"endColumn":34},{"ruleId":"95","severity":1,"message":"127","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"128","line":8,"column":19,"nodeType":"97","messageId":"98","endLine":8,"endColumn":29},{"ruleId":"95","severity":1,"message":"129","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":23},{"ruleId":"95","severity":1,"message":"106","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":24},{"ruleId":"95","severity":1,"message":"99","line":4,"column":16,"nodeType":"97","messageId":"98","endLine":4,"endColumn":22},{"ruleId":"95","severity":1,"message":"130","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"107","line":5,"column":20,"nodeType":"97","messageId":"98","endLine":5,"endColumn":29},{"ruleId":"95","severity":1,"message":"127","line":12,"column":9,"nodeType":"97","messageId":"98","endLine":12,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":14,"column":13,"nodeType":"120","endLine":22,"endColumn":4},{"ruleId":"95","severity":1,"message":"129","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":23},{"ruleId":"95","severity":1,"message":"131","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":4,"column":16,"nodeType":"97","messageId":"98","endLine":4,"endColumn":22},{"ruleId":"95","severity":1,"message":"132","line":15,"column":9,"nodeType":"97","messageId":"98","endLine":15,"endColumn":17},{"ruleId":"95","severity":1,"message":"127","line":16,"column":9,"nodeType":"97","messageId":"98","endLine":16,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":18,"column":13,"nodeType":"120","endLine":26,"endColumn":4},"no-unused-vars","'DetailPage' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'Switch' is defined but never used.","'AiTwotoneHeart' is defined but never used.","'useEffect' is defined but never used.","'onLikeHandler' is assigned a value but never used.","'Card' is defined but never used.","'vote' is assigned a value but never used.","'setVote' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.","ArrayExpression",["135"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["136"],"'AiOutlineConsoleSql' is defined but never used.","'useParams' is defined but never used.","'session_id' is assigned a value but never used.","'setSessionId' is assigned a value but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'AiTwotoneStar' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'userName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [movieId]",{"range":"141","text":"142"},"Update the dependencies array to be: [page, category, url]",{"range":"143","text":"144"},[643,645],"[movieId]",[516,532],"[page, category, url]"]